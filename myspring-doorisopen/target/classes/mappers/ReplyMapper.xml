<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
  <mapper namespace="org.doorisopen.myspring.Board.ReplyMapper">

	<!-- 댓글 등록 -->
	<insert id="ReplyCreate" parameterType="ReplyVO">
	INSERT INTO
	reply 
	(
		boardIdx,
		replyContent,
		replyWriter,
		replyWriteDate,
		replyModifyDate
	) VALUES (
		#{boardIdx},
		#{replyContent},
		#{replyWriter},
		now(),
		now()
	)
	</insert>
	
    <!-- 댓글 리스트 
    
    SELECT
			*
		FROM
			reply
		WHERE
			boardIdx = #{boardIdx}
		AND
			enabled = '1'
		ORDER BY 
			replyWriteDate desc
    
    -->
    <select id="ReplyRead" resultType="ReplyVO">
 	 <![CDATA[
		SELECT *
		FROM
		(SELECT CASE WHEN LEVEL-1 > 0 then CONCAT(CONCAT(REPEAT('┗', level - 1)), rep.replyContent)
					ELSE rep.replyContent
					END AS replyContent
		     , rep.replyIdx
		     , rep.replyParent
		     , rep.replyWriter
		     , rep.boardIdx
		     , rep.enabled
		     , fnc.level
		FROM
			(SELECT fnc_reply_hierarchi() AS replyIdx, @level AS level
			 FROM (SELECT @start_with:=0, @replyIdx:=@start_with, @level:=0) vars
					JOIN myspring.reply
					WHERE @replyIdx IS NOT NULL) fnc
		JOIN myspring.reply rep ON fnc.replyIdx = rep.replyIdx) hie
		WHERE hie.boardIdx = #{boardIdx}
		AND enabled = '1'
 	 ]]> 
 	</select>
 	
 	
    <!-- 댓글 수정 -->
    <update id="ReplyUpdate">
    	UPDATE
    		reply
    	SET
    		replyContent = #{replyContent}
			, replyModifier = #{replyModifier}
			, replyModifyDate = now()
		WHERE
			replyIdx = #{replyIdx}
 	</update>
 	
    <!-- 댓글 삭제  : 부모 댓글 삭제 하면 하위 대댓글도 전부 삭제해야함 -->
    <delete id="ReplyDelete">
    	DELETE
    	FROM reply
    	WHERE
    		replyIdx = #{replyIdx}
 	</delete>
 	
 	<!-- 대댓글 리스트 TEST-->
    <select id="replyToReplyRead" resultType="ReplyVO">
 	 <![CDATA[
		SELECT *
		FROM
		(SELECT CASE WHEN LEVEL-1 > 0 then CONCAT(CONCAT(REPEAT('    ', level - 1),'┗'), rep.replyContent)
					ELSE rep.replyContent
					END AS replyContent
		     , rep.replyIdx
		     , rep.replyParent
		     , rep.replyWriter
		     , rep.boardIdx
		     , rep.enabled
		     , fnc.level
		FROM
			(SELECT fnc_reply_hierarchi() AS replyIdx, @level AS level
			 FROM (SELECT @start_with:=0, @replyIdx:=@start_with, @level:=0) vars
					JOIN myspring.reply
					WHERE @replyIdx IS NOT NULL) fnc
		JOIN myspring.reply rep ON fnc.replyIdx = rep.replyIdx) hie
		WHERE hie.boardIdx = #{boardIdx}
		AND enabled = '1'
 	 ]]> 
 	</select>
 	
 	<!-- 대댓글 등록 -->
	<insert id="replyToReplyCreate" parameterType="ReplyVO">
	INSERT INTO
	reply 
	(
		boardIdx,
		replyParent,
		replyContent,
		replyWriter,
		replyWriteDate,
		replyModifyDate
	) VALUES (
		#{boardIdx},
		#{replyIdx},
		#{replyToReplyContent},
		#{replyToReplyWriter},
		now(),
		now()
	)
	</insert>
 	
 	
</mapper>